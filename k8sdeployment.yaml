apiVersion: apps/v1
kind: Deployment
metadata:
  name: demosvc-a
spec:
  selector:
    matchLabels:
      app: demosvc-a
  replicas: 1
  template:
    metadata:
      labels:
        app: demosvc-a
    spec:
      containers:
      - name: demosvc-a
        image: nishantnepal/demosvc-a:v1
        imagePullPolicy: Always
        resources:
          requests:
            memory: "250Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "250m"
        ports:
        - containerPort: 80  
        env:
          - name: WebAppCUrl
            value: "http://demosvc-c"                                
            
---
apiVersion: v1
kind: Service
metadata:
    name: demosvc-a
spec:
    type: ClusterIP
    ports:
    - port: 80 
      targetPort: 80
    selector:
        app: demosvc-a      

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demosvc-b
spec:
  selector:
    matchLabels:
      app: demosvc-b
  replicas: 1
  template:
    metadata:
      labels:
        app: demosvc-b
    spec:
      containers:
      - name: demosvc-b
        image: nishantnepal/demosvc-b:v1
        imagePullPolicy: Always
        resources:
          requests:
            memory: "250Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "250m"
        ports:
        - containerPort: 80                                  

---
apiVersion: v1
kind: Service
metadata:
    name: demosvc-b
spec:
    type: ClusterIP
    ports:
    - port: 80 
      targetPort: 80
    selector:
        app: demosvc-b    

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demosvc-c
spec:
  selector:
    matchLabels:
      app: demosvc-c
  replicas: 1
  template:
    metadata:
      labels:
        app: demosvc-c
    spec:
      containers:
      - name: demosvc-c
        image: nishantnepal/demosvc-c:v1
        imagePullPolicy: Always
        resources:
          requests:
            memory: "250Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "250m"
        ports:
        - containerPort: 80       
        env:
          - name: WebAppBUrl
            value: "http://demosvc-b"                            

---
apiVersion: v1
kind: Service
metadata:
    name: demosvc-c
spec:
    type: ClusterIP
    ports:
    - port: 80 
      targetPort: 80
    selector:
        app: demosvc-c
---            
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: demosvc-c
  #namespace: ingress-basic
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: "demosvc-c.<public-ip>.nip.io"
      http:
       paths:              
        - path: /(.*)
          backend:
            serviceName: demosvc-c
            servicePort: 80
          

---            
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: demosvc-b
  #namespace: ingress-basic
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: "demosvc-b.<public-ip>.nip.io"
      http:
       paths:              
        - path: /(.*)
          backend:
            serviceName: demosvc-b
            servicePort: 80
---            
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: demosvc-a
  #namespace: ingress-basic
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: "demosvc-a.<public-ip>.nip.io"
      http:
       paths:              
        - path: /(.*)
          backend:
            serviceName: demosvc-a
            servicePort: 80            